<?xml version="1.0" encoding="utf-8" ?>
<local:BaseContentPage 
    xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:local="clr-namespace:HorusStudio.Maui.MaterialDesignControls.Sample.Pages"
    xmlns:material="clr-namespace:HorusStudio.Maui.MaterialDesignControls;assembly=HorusStudio.Maui.MaterialDesignControls"
    xmlns:vm="clr-namespace:HorusStudio.Maui.MaterialDesignControls.Sample.ViewModels"
    x:Class="HorusStudio.Maui.MaterialDesignControls.Sample.Pages.ChipsPage"
    x:TypeArguments="vm:ChipsViewModel"
    x:DataType="vm:ChipsViewModel"
    ControlTemplate="{StaticResource ControlPageWithTopAppBar}">

    <ContentPage.Resources>
        <Style x:Key="GridChipsContainer" TargetType="Grid">
            <Setter Property="RowDefinitions" Value="40,40" />
            <Setter Property="ColumnDefinitions" Value="*,*" />
            <Setter Property="RowSpacing" Value="16" />
            <Setter Property="ColumnSpacing" Value="16" />
        </Style>

        <Style x:Key="VisualStateManagerStyle" TargetType="material:MaterialChip"> 
            <Setter Property="VisualStateManager.VisualStateGroups"> 
                <VisualStateGroupList> 
                    <VisualStateGroup x:Name="CommonStates"> 
                        <VisualState x:Name="Normal">
                            <VisualState.Setters>
                                <Setter Property="BackgroundColor" Value="LightYellow" />
                                <Setter Property="ShadowColor" Value="Black" />
                                <Setter Property="BorderColor" Value="DarkGoldenrod" />
                            </VisualState.Setters>  
                        </VisualState>
                        <VisualState x:Name="Disabled">
                            <VisualState.Setters>
                                <Setter Property="BackgroundColor" Value="LightGray" />
                                <Setter Property="ShadowColor" Value="Black" />
                                <Setter Property="BorderColor" Value="Blue" />
                            </VisualState.Setters>
                        </VisualState>
                        <VisualState x:Name="Selected">
                            <VisualState.Setters>
                                <Setter Property="BackgroundColor" Value="White" />
                                <Setter Property="ShadowColor" Value="Green" />
                                <Setter Property="BorderColor" Value="Transparent" />
                                <Setter Property="LeadingIconTintColor" Value="Green"/>
                                <Setter Property="TrailingIconTintColor" Value="Blue"/>
                            </VisualState.Setters>
                        </VisualState>
                    </VisualStateGroup>
                </VisualStateGroupList>
            </Setter>
        </Style>
        
        <Style x:Key="SelectedLeadingIconStateManager" TargetType="material:MaterialChip"> 
            <Setter Property="VisualStateManager.VisualStateGroups"> 
                <VisualStateGroupList> 
                    <VisualStateGroup x:Name="CommonStates"> 
                        <VisualState x:Name="Normal">
                            <VisualState.Setters>
                                <Setter Property="BorderColor" Value="{AppThemeBinding Light={x:Static material:MaterialLightTheme.Outline}, Dark={x:Static material:MaterialDarkTheme.Outline}}" />
                                <Setter Property="BackgroundColor" Value="{AppThemeBinding Light={x:Static material:MaterialLightTheme.SurfaceContainerLow}, Dark={x:Static material:MaterialDarkTheme.SurfaceContainerLow}}" />
                                <Setter Property="TextColor" Value="{AppThemeBinding Light={x:Static material:MaterialLightTheme.OnSurfaceVariant}, Dark={x:Static material:MaterialDarkTheme.OnSurfaceVariant}}" />
                                <Setter Property="LeadingIconTintColor" Value="{AppThemeBinding Light={x:Static material:MaterialLightTheme.Primary}, Dark={x:Static material:MaterialDarkTheme.Primary}}" />
                                <Setter Property="TrailingIconTintColor" Value="{AppThemeBinding Light={x:Static material:MaterialLightTheme.Primary}, Dark={x:Static material:MaterialDarkTheme.Primary}}" />
                                <Setter Property="ShadowColor" Value="{AppThemeBinding Light={x:Static material:MaterialLightTheme.Shadow}, Dark={x:Static material:MaterialDarkTheme.Shadow}}" />
                            </VisualState.Setters>
                        </VisualState>
                        <VisualState x:Name="Selected">
                            <VisualState.Setters>
                                <Setter Property="BorderColor" Value="{AppThemeBinding Light={x:Static material:MaterialLightTheme.SecondaryContainer}, Dark={x:Static material:MaterialDarkTheme.SecondaryContainer}}" />
                                <Setter Property="BackgroundColor" Value="{AppThemeBinding Light={x:Static material:MaterialLightTheme.SecondaryContainer}, Dark={x:Static material:MaterialDarkTheme.SecondaryContainer}}" />
                                <Setter Property="TextColor" Value="{AppThemeBinding Light={x:Static material:MaterialLightTheme.OnSecondaryContainer}, Dark={x:Static material:MaterialDarkTheme.OnSecondaryContainer}}" />
                                <Setter Property="LeadingIconTintColor" Value="{AppThemeBinding Light={x:Static material:MaterialLightTheme.OnSecondaryContainer}, Dark={x:Static material:MaterialDarkTheme.OnSecondaryContainer}}" />
                                <Setter Property="ShadowColor" Value="{AppThemeBinding Light={x:Static material:MaterialLightTheme.Shadow}, Dark={x:Static material:MaterialDarkTheme.Shadow}}" />
                                <Setter Property="LeadingIcon" Value="plus.png" />
                            </VisualState.Setters>
                        </VisualState>
                    </VisualStateGroup>
                </VisualStateGroupList>
            </Setter>
        </Style>
        
        <Style x:Key="SelectedTrailingIconStateManager" TargetType="material:MaterialChip"> 
            <Setter Property="VisualStateManager.VisualStateGroups"> 
                <VisualStateGroupList> 
                    <VisualStateGroup x:Name="CommonStates"> 
                        <VisualState x:Name="Normal">
                            <VisualState.Setters>
                                <Setter Property="BorderColor" Value="{AppThemeBinding Light={x:Static material:MaterialLightTheme.Outline}, Dark={x:Static material:MaterialDarkTheme.Outline}}" />
                                <Setter Property="BackgroundColor" Value="{AppThemeBinding Light={x:Static material:MaterialLightTheme.SurfaceContainerLow}, Dark={x:Static material:MaterialDarkTheme.SurfaceContainerLow}}" />
                                <Setter Property="TextColor" Value="{AppThemeBinding Light={x:Static material:MaterialLightTheme.OnSurfaceVariant}, Dark={x:Static material:MaterialDarkTheme.OnSurfaceVariant}}" />
                                <Setter Property="LeadingIconTintColor" Value="{AppThemeBinding Light={x:Static material:MaterialLightTheme.Primary}, Dark={x:Static material:MaterialDarkTheme.Primary}}" />
                                <Setter Property="TrailingIconTintColor" Value="{AppThemeBinding Light={x:Static material:MaterialLightTheme.Primary}, Dark={x:Static material:MaterialDarkTheme.Primary}}" />
                                <Setter Property="ShadowColor" Value="{AppThemeBinding Light={x:Static material:MaterialLightTheme.Shadow}, Dark={x:Static material:MaterialDarkTheme.Shadow}}" />
                            </VisualState.Setters>
                        </VisualState>
                        <VisualState x:Name="Selected">
                            <VisualState.Setters>
                                <Setter Property="BorderColor" Value="{AppThemeBinding Light={x:Static material:MaterialLightTheme.SecondaryContainer}, Dark={x:Static material:MaterialDarkTheme.SecondaryContainer}}" />
                                <Setter Property="BackgroundColor" Value="{AppThemeBinding Light={x:Static material:MaterialLightTheme.SecondaryContainer}, Dark={x:Static material:MaterialDarkTheme.SecondaryContainer}}" />
                                <Setter Property="TextColor" Value="{AppThemeBinding Light={x:Static material:MaterialLightTheme.OnSecondaryContainer}, Dark={x:Static material:MaterialDarkTheme.OnSecondaryContainer}}" />
                                <Setter Property="TrailingIconTintColor" Value="{AppThemeBinding Light={x:Static material:MaterialLightTheme.OnSecondaryContainer}, Dark={x:Static material:MaterialDarkTheme.OnSecondaryContainer}}" />
                                <Setter Property="ShadowColor" Value="{AppThemeBinding Light={x:Static material:MaterialLightTheme.Shadow}, Dark={x:Static material:MaterialDarkTheme.Shadow}}" />
                                <Setter Property="TrailingIcon" Value="horus_logo.png" />
                            </VisualState.Setters>
                        </VisualState>
                    </VisualStateGroup>
                </VisualStateGroupList>
            </Setter>
        </Style>
        
        <Style x:Key="SelectedBothIconStateManager" TargetType="material:MaterialChip"> 
            <Setter Property="VisualStateManager.VisualStateGroups"> 
                <VisualStateGroupList> 
                    <VisualStateGroup x:Name="CommonStates"> 
                        <VisualState x:Name="Normal">
                            <VisualState.Setters>
                                <Setter Property="BorderColor" Value="{AppThemeBinding Light={x:Static material:MaterialLightTheme.Outline}, Dark={x:Static material:MaterialDarkTheme.Outline}}" />
                                <Setter Property="BackgroundColor" Value="{AppThemeBinding Light={x:Static material:MaterialLightTheme.SurfaceContainerLow}, Dark={x:Static material:MaterialDarkTheme.SurfaceContainerLow}}" />
                                <Setter Property="TextColor" Value="{AppThemeBinding Light={x:Static material:MaterialLightTheme.OnSurfaceVariant}, Dark={x:Static material:MaterialDarkTheme.OnSurfaceVariant}}" />
                                <Setter Property="LeadingIconTintColor" Value="{AppThemeBinding Light={x:Static material:MaterialLightTheme.Primary}, Dark={x:Static material:MaterialDarkTheme.Primary}}" />
                                <Setter Property="TrailingIconTintColor" Value="{AppThemeBinding Light={x:Static material:MaterialLightTheme.Primary}, Dark={x:Static material:MaterialDarkTheme.Primary}}" />
                                <Setter Property="ShadowColor" Value="{AppThemeBinding Light={x:Static material:MaterialLightTheme.Shadow}, Dark={x:Static material:MaterialDarkTheme.Shadow}}" />
                            </VisualState.Setters>
                        </VisualState>
                        <VisualState x:Name="Selected">
                            <VisualState.Setters>
                                <Setter Property="BorderColor" Value="{AppThemeBinding Light={x:Static material:MaterialLightTheme.SecondaryContainer}, Dark={x:Static material:MaterialDarkTheme.SecondaryContainer}}" />
                                <Setter Property="BackgroundColor" Value="{AppThemeBinding Light={x:Static material:MaterialLightTheme.SecondaryContainer}, Dark={x:Static material:MaterialDarkTheme.SecondaryContainer}}" />
                                <Setter Property="TextColor" Value="{AppThemeBinding Light={x:Static material:MaterialLightTheme.OnSecondaryContainer}, Dark={x:Static material:MaterialDarkTheme.OnSecondaryContainer}}" />
                                <Setter Property="LeadingIconTintColor" Value="{AppThemeBinding Light={x:Static material:MaterialLightTheme.OnSecondaryContainer}, Dark={x:Static material:MaterialDarkTheme.OnSecondaryContainer}}" />
                                <Setter Property="TrailingIconTintColor" Value="{AppThemeBinding Light={x:Static material:MaterialLightTheme.OnSecondaryContainer}, Dark={x:Static material:MaterialDarkTheme.OnSecondaryContainer}}" />
                                <Setter Property="ShadowColor" Value="{AppThemeBinding Light={x:Static material:MaterialLightTheme.Shadow}, Dark={x:Static material:MaterialDarkTheme.Shadow}}" />
                                <Setter Property="LeadingIcon" Value="plus.png" />
                                <Setter Property="TrailingIcon" Value="horus_logo.png" />
                            </VisualState.Setters>
                        </VisualState>
                    </VisualStateGroup>
                </VisualStateGroupList>
            </Setter>
        </Style>
    </ContentPage.Resources>

    <VerticalStackLayout Spacing="8">
        <material:MaterialLabel Style="{StaticResource SectionTitle}" Text="Suggestion Chips" />
        <material:MaterialCard Style="{StaticResource CardControlContainer}">
            <Grid Style="{StaticResource GridChipsContainer}">

                <material:MaterialChip
                    Grid.Column="0"
                    Grid.Row="0"
                    IsEnabled="{Binding IsEnabledState}"
                    Text="Suggestion A"
                    HorizontalOptions="End"
                    Command="{Binding TappedChipsCommand}"/>

                <material:MaterialChip
                    Grid.Column="1"
                    Grid.Row="0"
                    TrailingIcon="horus_logo.png"
                    Text="Suggestion B"
                    HorizontalOptions="Start"
                    Command="{Binding TappedChipsCommand}"/>

                <material:MaterialChip
                    Grid.Column="0"
                    Grid.Row="1"
                    LeadingIcon="plus.png"
                    Text="Suggestion C"
                    HorizontalOptions="End"
                    Command="{Binding TappedChipsCommand}"/>

                <material:MaterialChip
                    Grid.Column="1"
                    Grid.Row="1"
                    Type="Normal"
                    LeadingIcon="plus.png"
                    Text="Suggestion D"
                    HorizontalOptions="Start"
                    TrailingIcon="horus_logo.png"
                    Command="{Binding TappedChipsCommand}"
                    CommandParameter="Suggestion D" />

            </Grid>
        </material:MaterialCard>
        <material:MaterialLabel 
            Text="Suggestion chips help narrow a user’s intent by presenting dynamically generated suggestions, such as possible responses or search filters." Type="BodySmall" />

        <material:MaterialLabel Style="{StaticResource SectionTitle}" Text="Filter Chips" />
        <material:MaterialCard Style="{StaticResource CardControlContainer}">
            <StackLayout
                Spacing="8">
                <Grid Style="{StaticResource GridChipsContainer}">

                    <material:MaterialChip
                        Grid.Column="0"
                        Grid.Row="0"
                        IsEnabled="{Binding IsEnabledState}"
                        Type="Filter"
                        Text="Filter A"
                        HorizontalOptions="End"
                        IsSelected="{Binding ChipsFilterA}"/>

                    <material:MaterialChip
                        Grid.Column="1"
                        Grid.Row="0"
                        Style="{StaticResource SelectedTrailingIconStateManager}"
                        Type="Filter"
                        Text="Filter B"
                        HorizontalOptions="Start"
                        IsSelected="{Binding ChipsFilterB}"/>

                    <material:MaterialChip
                        Grid.Column="0"
                        Grid.Row="1"
                        Style="{StaticResource SelectedLeadingIconStateManager}"
                        Type="Filter"
                        Text="Filter C"
                        HorizontalOptions="End"
                        IsSelected="{Binding ChipsFilterC}"/>

                    <material:MaterialChip
                        Grid.Column="1"
                        Grid.Row="1"
                        Style="{StaticResource SelectedBothIconStateManager}"
                        Type="Filter"
                        Text="Filter D"
                        HorizontalOptions="Start"
                        IsSelected="{Binding ChipsFilterD}"/>

                </Grid>
                <material:MaterialButton
                    Text="Show filter selection"
                    Command="{Binding ShowFilterSelectionCommand}"/>
            </StackLayout>
        </material:MaterialCard>
        <material:MaterialLabel 
            Text="Tapping on a filter chip activates it and appends a leading checkmark icon to the starting edge of the chip label."  Type="BodySmall" />

        <material:MaterialLabel Style="{StaticResource SectionTitle}" Text="Full API Chips" />
        <material:MaterialCard Style="{StaticResource CardControlContainer}">
            <Grid Style="{StaticResource GridChipsContainer}" RowDefinitions="Auto,Auto,Auto">

                <material:MaterialChip
                    Grid.Column="0"
                    Grid.Row="0"
                    Type="Filter"
                    FontSize="20"
                    IsEnabled="{Binding IsEnabledState}"
                    Text="Full API A"
                    HorizontalOptions="End"
                    Style="{StaticResource VisualStateManagerStyle}"/>

                <material:MaterialChip
                    Grid.Column="1"
                    Grid.Row="0"
                    BorderWidth="4"
                    Type="Filter"
                    TrailingIcon="horus_logo.png"
                    Text="Full API B"
                    HorizontalOptions="Start"
                    Style="{StaticResource VisualStateManagerStyle}"/>
<!--IconStateOnSelection="TrailingVisible"-->
                <material:MaterialChip
                    Grid.Column="0"
                    Grid.Row="1"
                    Type="Filter"
                    IsSelected="True"
                    LeadingIcon="plus.png"
                    Text="Full API C"
                    HorizontalOptions="End"
                    Style="{StaticResource VisualStateManagerStyle}"/>
<!--IconStateOnSelection="LeadingVisible"-->
                <material:MaterialChip
                    Grid.Column="1"
                    Grid.Row="1"
                    HeightRequest="42"
                    WidthRequest="140"
                    CornerRadius="0"
                    LeadingIcon="plus.png"
                    Text="Full API D"
                    Type="Filter"
                    HorizontalOptions="Start"
                    TrailingIcon="horus_logo.png"
                    Style="{StaticResource VisualStateManagerStyle}"/>
<!--IconStateOnSelection="BothVisible"-->
                <HorizontalStackLayout
                    Grid.Row="2"
                    Grid.ColumnSpan="2"
                    HorizontalOptions="Center">
                    <material:MaterialSwitch
                        Text="Is enabled"
                        IsToggled="{Binding IsEnabledState}" />    
                </HorizontalStackLayout>
            </Grid>
        </material:MaterialCard>
        <material:MaterialLabel 
            Text="You can modify the chip as you require, this is useful when you need to add it to specific spaces or follow the required layout throughout your app." Type="BodySmall" />
        
        <material:MaterialLabel Style="{StaticResource SectionTitle}" Text="Using attached properties" />
        <material:MaterialCard Style="{StaticResource CardControlContainer}">
            <StackLayout
                Spacing="8">
                <StackLayout
                    material:MaterialViewGroup.GroupName="SingleGroupSample"
                    material:MaterialViewGroup.SelectionType="Single"
                    material:MaterialViewGroup.SelectedValue="{Binding SelectedChipValue}"
                    material:MaterialViewGroup.SelectedValueChangedCommand="{Binding SelectedValueChangedCommand}"
                    Orientation="Horizontal"
                    Spacing="8">
                    <material:MaterialChip
                        Type="Filter"
                        Text="Option A"/>
                    <material:MaterialChip
                        Type="Filter"
                        Text="Option B"/>
                    <material:MaterialChip
                        Type="Filter"
                        Text="Option C"/>
                </StackLayout>
                <material:MaterialLabel
                    Text="{Binding SelectedChipText}"
                    HorizontalTextAlignment="Center" />
                <material:MaterialButton
                    Text="Select Chip C"
                    Command="{Binding SelectChipCCommand}" />
            </StackLayout>
        </material:MaterialCard>
        <material:MaterialLabel 
            Text="We are creating chips using MaterialViewGroup's attachable properties: GroupName, SelectionType (Single), SelectedValue and SelectedValueChangedCommand." Type="BodySmall" />
        
        <material:MaterialLabel Style="{StaticResource SectionTitle}" Text="SelectionType: Multiple" />
        <material:MaterialCard Style="{StaticResource CardControlContainer}">
            <StackLayout
                Spacing="8">
                <StackLayout
                    material:MaterialViewGroup.GroupName="MultipleGroupSample"
                    material:MaterialViewGroup.SelectionType="Multiple"
                    material:MaterialViewGroup.SelectedValues="{Binding SelectedChips}"
                    material:MaterialViewGroup.SelectedValueChangedCommand="{Binding ShowSelectedChipsCommand}"
                    Orientation="Horizontal"
                    Spacing="8">
                    <material:MaterialChip
                        Type="Filter"
                        Text="Option A"/>
                    <material:MaterialChip
                        Type="Filter"
                        Text="Option B"/>
                    <material:MaterialChip
                        Type="Filter"
                        Text="Option C"/>
                </StackLayout>
                <material:MaterialLabel
                    Text="{Binding SelectedChipsText}"
                    HorizontalTextAlignment="Center" />
            </StackLayout>
        </material:MaterialCard>
        <material:MaterialLabel 
            Text="We are creating chips using MaterialViewGroup's attachable properties: GroupName, SelectionType (Multiple), SelectedValues and SelectedValueChangedCommand." Type="BodySmall" />
        
        <material:MaterialLabel Style="{StaticResource SectionTitle}" Text="Grouping MaterialChip" />
        <material:MaterialCard Style="{StaticResource CardControlContainer}">
            <StackLayout
                Spacing="8">
                <FlexLayout Wrap="Wrap" Direction="Row" JustifyContent="Start"
                            material:MaterialViewGroup.GroupName="TestingChipsGroup"
                            material:MaterialViewGroup.SelectedValue="{Binding SelectedChipItem}"
                            BindableLayout.ItemsSource="{Binding Chips}">
                    <BindableLayout.ItemTemplate>
                        <DataTemplate x:DataType="x:String">
                            <material:MaterialChip
                                Type="Filter"
                                Text="{Binding .}"
                                Margin="4" />
                        </DataTemplate>
                    </BindableLayout.ItemTemplate>
                </FlexLayout>
                <material:MaterialButton
                    Text="Show selection"
                    Command="{Binding ShowSelectedItemCommand}" />
            </StackLayout>
        </material:MaterialCard>
        <material:MaterialLabel Text="We are creating chips using a BindableLayout and MaterialViewGroup's attachable properties" Type="BodySmall" />
        
    </VerticalStackLayout>
</local:BaseContentPage>